name: "release"
on:
    pull_request:
        branches:
            - master

jobs:
    create-release:
        runs-on: ubuntu-latest
        outputs:
            RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

        steps:
            - uses: actions/checkout@v2
            - name: setup node
              uses: actions/setup-node@v1
              with:
                  node-version: 14
            - name: get version
              run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
            - name: create release
              id: create_release
              uses: actions/create-release@v1.1.0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ env.PACKAGE_VERSION }}
                  release_name: "Remix v${{ env.PACKAGE_VERSION }}"
                  body: CHANGELOG.md
                  draft: false
                  prerelease: false
    build-tauri:
        needs: create-release
        strategy:
            fail-fast: false
            matrix:
                platform: [macos-latest, ubuntu-latest, windows-latest]

        runs-on: ${{ matrix.platform }}
        steps:
            - uses: actions/checkout@v2
            - name: setup node
              uses: actions/setup-node@v1
              with:
                  node-version: 14
            - name: install Rust stable
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
            - name: install tauri bundler
              run: cargo install tauri-bundler --force
            - name: install webkit2gtk libgtk-3-dev libappindicator3-dev (ubuntu only)
              if: matrix.platform == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y webkit2gtk-4.0 libgtk-3-dev libappindicator3-dev
            - name: install app dependencies and build it
              run: npm install && npm run build
            - uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  releaseId: ${{ needs.create-release.outputs.RELEASE_UPLOAD_ID }}